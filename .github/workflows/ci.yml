name: ci

on:
  push:
    branches: [ "" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "" ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Go 环境
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      # Step 3: 安装xgo
      - name: Install xgo
        run: |
          go install src.techknowlogick.com/xgo@latest

      # Step 4: 编译项目
      - name: Cross-Compile using xgo
        run: |
          mkdir -p output
          xgo --targets=darwin/* \
          -out output/ncmctl ./cmd/ncmctl/main.go

      # Step 5: 压缩并上传二进制文件
      - name: Compress and upload binaries
        id: compress
        run: |
          for file in output/*; do
            filename=$(basename "$file")
            os_arch=$(echo "$filename" | sed -E 's/^ncmctl[-]?|[.exe]*$//g' | tr '-' '_')
            tarball="output/ncmctl_${os_arch}.tar.gz"
            tar -czf "$tarball" -C output "$filename"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: artifacts
          path: ./output
          if-no-files-found: error

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: artifacts*
          path: ./output
          merge-multiple: true

      - name: Debug Release
        run: |
          echo "Current ref: ${{ github.ref }}"
          echo "Generated artifacts:"
          ls ./output
    

      # Step 6: 上传每个tarball文件
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ./output/*
          generate_release_notes: false
          fail_on_unmatched_files: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

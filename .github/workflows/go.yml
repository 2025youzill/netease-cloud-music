# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: ci

on:
  push:
    branches: [ "" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "" ]
  workflow_dispatch:

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.platforms.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create matrix
        id: platforms
        run: |
          echo '[
            "darwin/amd64", "darwin/arm64",
            "freebsd/amd64", "freebsd/arm64", "freebsd/riscv64",
            "linux/amd64", "linux/arm64", "linux/loong64", "linux/ppc64", "linux/ppc64le", "linux/riscv64",
            "netbsd/amd64", "netbsd/arm64",
            "openbsd/amd64", "openbsd/arm64", "openbsd/ppc64", "openbsd/riscv64",
            "plan9/amd64",
            "windows/amd64", "windows/arm64"
          ]' > platforms.json
          echo "matrix=$(cat platforms.json)" >> $GITHUB_OUTPUT

      - name: Show matrix
        run: echo ${{ steps.platforms.outputs.matrix }}

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.prepare.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cross Compile
        run: |
          platform=${{ matrix.platform }}
          # 使用 bash split 来分割 platform 字符串
          OS=$(echo $platform | cut -d'/' -f1)
          ARCH=$(echo $platform | cut -d'/' -f2)
          output_file="output/${platform}/ncmctl"
          mkdir -p "$(dirname "$output_file")"
          GOOS=$OS GOARCH=$ARCH go build -o "$output_file" ./cmd/ncmctl/main.go

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform }}
          path: output/${{ matrix.platform }}

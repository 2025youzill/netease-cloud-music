name: ci

on:
  push:
    branches: [ "" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: 设置 Go 环境（可选，仅用于工具安装或调试）
      - name: Set up Go environment
        uses: actions/setup-go@v4
        with:
          go-version: '1.21' # 设置你的 Go 版本
      # Step 3: 安装xgo
      - name: Install xgo
        run: |
          go install src.techknowlogick.com/xgo@latest

      # Step 4: 编译项目
      - name: Cross-Compile using xgo
        run: |
          mkdir -p output
          xgo --targets=linux/*,windows/*,darwin/* \
          -out output/ncmctl ./cmd/ncmctl/main.go

      # Step 4: 保存编译的二进制文件 
      # https://github.com/actions/upload-artifact
      # - name: Upload binaries
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: binaries
      #     path: output/
      - name: Compress and Upload binaries
        run: |
          for file in output/*; do
            filename=$(basename "$file")
            os_arch=$(echo "$filename" | sed -E 's/^ncmctl[-]?|[.exe]*$//g' | tr '-' '_')
            tarball="ncmctl_${os_arch}.tar.gz"
            tar -czf "$tarball" -C output "$filename"
            echo "::set-output name=tarball::$tarball"
          done
        continue-on-error: true

      - name: Upload tarballs
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.compress.outputs.tarball }}
          path: ${{ steps.compress.outputs.tarball }}  
      
